r of the text in the item above it.

First list item
First nested list item
Second nested list item Nested list with alignment highlighted
List with two levels of nested items

To create a nested list in the comment editor on GitHub, which doesn't use a monospaced font, you can look at the list item immediately above the nested list and count the number of characters that appear before the content of the item. Then type that number of space characters in front of the nested list item.

In this example, you could add a nested list item under the list item 100. First list item by indenting the nested list item a minimum of five spaces, since there are five characters (100.) before First list item.

First list item
First nested list item List with a nested list item
You can create multiple levels of nested lists using the same method. For example, because the first nested list item has seven spaces (‚ê£‚ê£‚ê£‚ê£‚ê£-‚ê£) before the nested list content First nested list item, you would need to indent the second nested list item by seven spaces.

First list item
First nested list item
Second nested list item List with two levels of nested items
For more examples, see the GitHub Flavored Markdown Spec.

Task lists To create a task list, preface list items with a regular space character followed by [ ]. To mark a task as complete, use [x].

 Finish my changes
 Push my commits to GitHub
 Open a pull request Rendered task list
If a task list item description begins with a parenthesis, you'll need to escape it with :

 (Optional) Open a followup issue
For more information, see "About task lists."

Mentioning people and teams You can mention a person or team on GitHub by typing @ plus their username or team name. This will trigger a notification and bring their attention to the conversation. People will also receive a notification if you edit a comment to mention their username or team name.

@github/support What do you think about these updates?

Rendered @mention

When you mention a parent team, members of its child teams also receive notifications, simplifying communication with multiple groups of people. For more information, see "About teams."

Typing an @ symbol will bring up a list of people or teams on a project. The list filters as you type, so once you find the name of the person or team you are looking for, you can use the arrow keys to select it and press either tab or enter to complete the name. For teams, enter the @organization/team-name and all members of that team will get subscribed to the conversation.

The autocomplete results are restricted to repository collaborators and any other participants on the thread.

Referencing issues and pull requests You can bring up a list of suggested issues and pull requests within the repository by typing #. Type the issue or pull request number or title to filter the list, and then press either tab or enter to complete the highlighted result.

For more information, see "Autolinked references and URLs."

Referencing external resources If custom autolink references are configured for a repository, then references to external resources, like a JIRA issue or Zendesk ticket, convert into shortened links. To know which autolinks are available in your repository, contact someone with admin permissions to the repository. For more information, see "Configuring autolinks to reference external resources."

Content attachments Some GitHub Apps provide information in GitHub for URLs that link to their registered domains. GitHub renders the information provided by the app under the URL in the body or comment of an issue or pull request.

Content attachment

To see content attachments, you must have a GitHub App that uses the Content Attachments API installed on the repository. For more information, see "Installing an app in your personal account" and "Installing an app in your organization."

Content attachments will not be displayed for URLs that are part of a markdown link.

For more information about building a GitHub App that uses content attachments, see "Using Content Attachments" in the the GitHub Developer documentation.

Using emoji You can add emoji to your writing by typing :EMOJICODE:.

@octocat üëç This PR looks great - it's ready to merge! :shipit:

Rendered emoji

Typing : will bring up a list of suggested emoji. The list will filter as you type, so once you find the emoji you're looking for, press Tab or Enter to complete the highlighted result.

For a full list of available emoji and codes, check out emoji-cheat-sheet.com.

Paragraphs and line breaks You can create a new paragraph by leaving a blank line between lines of text.

Ignoring Markdown formatting You can tell GitHub to ignore (or escape) Markdown formatting by using \ before the Markdown character.

Let's rename *our-new-project* to *our-old-project*.

Rendered escaped character

For more information, see Daring Fireball's "Markdown Syntax."

Further reading GitHub Flavored Markdown Spec "About writing and formatting on GitHub" "Working with advanced formatting" "Mastering Markdown" Ask a humar of the text in the item above it.

First list item
First nested list item
Second nested list item Nested list with alignment highlighted
List with two levels of nested items

To create a nested list in the comment editor on GitHub, which doesn't use a monospaced font, you can look at the list item immediately above the nested list and count the number of characters that appear before the content of the item. Then type that number of space characters in front of the nested list item.

In this example, you could add a nested list item under the list item 100. First list item by indenting the nested list item a minimum of five spaces, since there are five characters (100.) before First list item.

First list item
First nested list item List with a nested list item
You can create multiple levels of nested lists using the same method. For example, because the first nested list item has seven spaces (‚ê£‚ê£‚ê£‚ê£‚ê£-‚ê£) before the nested list content First nested list item, you would need to indent the second nested list item by seven spaces.

First list item
First nested list item
Second nested list item List with two levels of nested items
For more examples, see the GitHub Flavored Markdown Spec.

Task lists To create a task list, preface list items with a regular space character followed by [ ]. To mark a task as complete, use [x].

 Finish my changes
 Push my commits to GitHub
 Open a pull request Rendered task list
If a task list item description begins with a parenthesis, you'll need to escape it with :

 (Optional) Open a followup issue
For more information, see "About task lists."

Mentioning people and teams You can mention a person or team on GitHub by typing @ plus their username or team name. This will trigger a notification and bring their attention to the conversation. People will also receive a notification if you edit a comment to mention their username or team name.

@github/support What do you think about these updates?

Rendered @mention

When you mention a parent team, members of its child teams also receive notifications, simplifying communication with multiple groups of people. For more information, see "About teams."

Typing an @ symbol will bring up a list of people or teams on a project. The list filters as you type, so once you find the name of the person or team you are looking for, you can use the arrow keys to select it and press either tab or enter to complete the name. For teams, enter the @organization/team-name and all members of that team will get subscribed to the conversation.

The autocomplete results are restricted to repository collaborators and any other participants on the thread.

Referencing issues and pull requests You can bring up a list of suggested issues and pull requests within the repository by typing #. Type the issue or pull request number or title to filter the list, and then press either tab or enter to complete the highlighted result.

For more information, see "Autolinked references and URLs."

Referencing external resources If custom autolink references are configured for a repository, then references to external resources, like a JIRA issue or Zendesk ticket, convert into shortened links. To know which autolinks are available in your repository, contact someone with admin permissions to the repository. For more information, see "Configuring autolinks to reference external resources."

Content attachments Some GitHub Apps provide information in GitHub for URLs that link to their registered domains. GitHub renders the information provided by the app under the URL in the body or comment of an issue or pull request.

Content attachment

To see content attachments, you must have a GitHub App that uses the Content Attachments API installed on the repository. For more information, see "Installing an app in your personal account" and "Installing an app in your organization."

Content attachments will not be displayed for URLs that are part of a markdown link.

For more information about building a GitHub App that uses content attachments, see "Using Content Attachments" in the the GitHub Developer documentation.

Using emoji You can add emoji to your writing by typing :EMOJICODE:.

@octocat üëç This PR looks great - it's ready to merge! :shipit:

Rendered emoji

Typing : will bring up a list of suggested emoji. The list will filter as you type, so once you find the emoji you're looking for, press Tab or Enter to complete the highlighted result.

For a full list of available emoji and codes, check out emoji-cheat-sheet.com.

Paragraphs and line breaks You can create a new paragraph by leaving a blank line between lines of text.

Ignoring Markdown formatting You can tell GitHub to ignore (or escape) Markdown formatting by using \ before the Markdown character.

Let's rename *our-new-project* to *our-old-project*.

Rendered escaped character

For more information, see Daring Fireball's "Markdown Syntax."

Further reading GitHub Flavored Markdown Spec "About writing and formatting on GitHub" "Working with advanced formatting" "Mastering Markdown" Ask a humar of the text in the item above it.

First list item
First nested list item
Second nested list item Nested list with alignment highlighted
List with two levels of nested items

To create a nested list in the comment editor on GitHub, which doesn't use a monospaced font, you can look at the list item immediately above the nested list and count the number of characters that appear before the content of the item. Then type that number of space characters in front of the nested list item.

In this example, you could add a nested list item under the list item 100. First list item by indenting the nested list item a minimum of five spaces, since there are five characters (100.) before First list item.

First list item
First nested list item List with a nested list item
You can create multiple levels of nested lists using the same method. For example, because the first nested list item has seven spaces (‚ê£‚ê£‚ê£‚ê£‚ê£-‚ê£) before the nested list content First nested list item, you would need to indent the second nested list item by seven spaces.

First list item
First nested list item
Second nested list item List with two levels of nested items
For more examples, see the GitHub Flavored Markdown Spec.

Task lists To create a task list, preface list items with a regular space character followed by [ ]. To mark a task as complete, use [x].

 Finish my changes
 Push my commits to GitHub
 Open a pull request Rendered task list
If a task list item description begins with a parenthesis, you'll need to escape it with :

 (Optional) Open a followup issue
For more information, see "About task lists."

Mentioning people and teams You can mention a person or team on GitHub by typing @ plus their username or team name. This will trigger a notification and bring their attention to the conversation. People will also receive a notification if you edit a comment to mention their username or team name.

@github/support What do you think about these updates?

Rendered @mention

When you mention a parent team, members of its child teams also receive notifications, simplifying communication with multiple groups of people. For more information, see "About teams."

Typing an @ symbol will bring up a list of people or teams on a project. The list filters as you type, so once you find the name of the person or team you are looking for, you can use the arrow keys to select it and press either tab or enter to complete the name. For teams, enter the @organization/team-name and all members of that team will get subscribed to the conversation.

The autocomplete results are restricted to repository collaborators and any other participants on the thread.

Referencing issues and pull requests You can bring up a list of suggested issues and pull requests within the repository by typing #. Type the issue or pull request number or title to filter the list, and then press either tab or enter to complete the highlighted result.

For more information, see "Autolinked references and URLs."

Referencing external resources If custom autolink references are configured for a repository, then references to external resources, like a JIRA issue or Zendesk ticket, convert into shortened links. To know which autolinks are available in your repository, contact someone with admin permissions to the repository. For more information, see "Configuring autolinks to reference external resources."

Content attachments Some GitHub Apps provide information in GitHub for URLs that link to their registered domains. GitHub renders the information provided by the app under the URL in the body or comment of an issue or pull request.

Content attachment

To see content attachments, you must have a GitHub App that uses the Content Attachments API installed on the repository. For more information, see "Installing an app in your personal account" and "Installing an app in your organization."

Content attachments will not be displayed for URLs that are part of a markdown link.

For more information about building a GitHub App that uses content attachments, see "Using Content Attachments" in the the GitHub Developer documentation.

Using emoji You can add emoji to your writing by typing :EMOJICODE:.

@octocat üëç This PR looks great - it's ready to merge! :shipit:

Rendered emoji

Typing : will bring up a list of suggested emoji. The list will filter as you type, so once you find the emoji you're looking for, press Tab or Enter to complete the highlighted result.

For a full list of available emoji and codes, check out emoji-cheat-sheet.com.

Paragraphs and line breaks You can create a new paragraph by leaving a blank line between lines of text.

Ignoring Markdown formatting You can tell GitHub to ignore (or escape) Markdown formatting by using \ before the Markdown character.

Let's rename *our-new-project* to *our-old-project*.

Rendered escaped character

For more information, see Daring Fireball's "Markdown Syntax."

Further reading GitHub Flavored Markdown Spec "About writing and formatting on GitHub" "Working with advanced formatting" "Mastering Markdown" Ask a huma
